const express = require('express')
const router = express.Router()
const GrupoController = require('../Controllers/GrupoController')
const RateLimiter = require('../Middleware/RateLimitMiddleware')
const { verifyToken, onlyUserActive, onlyOwnerOrAdminGroup, onlyAdmin } = require('../Middleware/AuthMiddleware')
const { onlyRolGrupo } = require('../Middleware/RolMiddleware')
const { validaDatos, validarId, validarTexto, validarTextoLargo } = require('../Helper/validaciones')

router.use(RateLimiter(1000, 4))
router.use(verifyToken)

router.get('/', GrupoController.GetAllGrupos)
router.get('/getMyGroups', onlyUserActive, GrupoController.GetMyGroups)
router.post('/', validarTexto('nombre'), validaDatos, onlyUserActive, GrupoController.CreateGrupo)
router.get('/:_id', validarId(), validaDatos, GrupoController.GetGrupo)
router.patch('/:_id', validarId(), validaDatos, onlyUserActive, onlyRolGrupo(['moderador']), GrupoController.UpdateGrupo)
router.delete('/:_id', validarId(), validaDatos, onlyUserActive, onlyRolGrupo(['creador']), GrupoController.DeleteGrupo)
router.post('/:_id/unir', validarId(), validaDatos, onlyUserActive, GrupoController.JoinGrupoPublic)
router.post('/:_id/salir', validarId(), validaDatos, onlyUserActive, GrupoController.LeaveGrupo)
router.get('/:_id/rol', validarId(), validaDatos, GrupoController.ListRolGrupo)
router.post('/:_id/rol/:UserId', validarId(), validarId('UserId'), validarTexto('rol'), validaDatos, onlyRolGrupo(['creador']), GrupoController.GiveRolGrupo)
router.delete('/:_id/rol/:UserId', validarId(), validarId('UserId'), validaDatos, onlyRolGrupo(['moderador']), GrupoController.RemoveRolGrupo)
router.get('/:_id/subgrupo', validarId(), validaDatos, GrupoController.GetSubGrupos)
router.post('/:_id/subgrupo', validarId(), validarTexto('nombre'), validaDatos, onlyUserActive, onlyRolGrupo(['moderador']), GrupoController.AddSubGrupo)
router.patch('/:_id/subgrupo/:subgrupo', validarId(), validarTexto('subgrupo', 'param'), validaDatos, onlyRolGrupo(['moderador']), GrupoController.UpdateSubGrupo)
router.delete('/:_id/subgrupo/:subgrupo', validarId(), validarTexto('subgrupo', 'param'), validaDatos, onlyRolGrupo(['moderador']), GrupoController.DeleteSubGrupo)
router.post('/:_id/unirPrivate', validarId(), validaDatos, onlyUserActive, GrupoController.JoinGrupoPrivate)
router.post('/:_id/writeMessage', validarId(), validaDatos, onlyUserActive, GrupoController.WriteMessage)
router.delete('/:_id/deleteMessage', validarId(), validaDatos, GrupoController.DeleteMessage)
router.post('/:_id/toggleUsersCanWrite', validarId(), validaDatos, onlyUserActive, onlyOwnerOrAdminGroup, GrupoController.ToggleUsersCanWrite)
router.post('/toggleLikeInAMessage', validaDatos, GrupoController.ToggleLikeInAMessage)
router.post('/addCommentInMessage/:_id', validarId(), validarTextoLargo('msg'), validaDatos, GrupoController.AddCommentInMessage)
router.delete('/deleteCommentInMessage/:_id', validarId(), validaDatos, GrupoController.DeleteCommentInMessage)
router.post('/toggleLikeInMessageComment', validaDatos, GrupoController.ToggleLikeInMessageComment)

module.exports = router
